;;; Personal configuration -*- lexical-binding: t -*-

;; Based on a preset generated by https://emacs.amodernist.com

;; Save the contents of this file under ~/.emacs.d/init.el
;; Do not forget to use Emacs' built-in help system:
;; Use C-h C-h to get an overview of all help commands.  All you
;; need to know about Emacs (what commands exist, what functions do,
;; what variables specify), the help system can provide.

;; Load a custom theme
(load-theme 'leuven t)

;; Set default font face
(set-face-attribute 'default nil :font "Iosevka Extended" :height 180)
(set-fontset-font t 'han "等距更纱黑体 SC")
(set-fontset-font t 'hangul "等距更纱黑体 K")
(set-fontset-font t 'kana "等距更纱黑体 J")
(set-fontset-font t 'cjk-misc "等距更纱黑体 SC")
(set-fontset-font t nil "等距更纱黑体 CL" nil 'append)

;; Fullscreen on startup
(set-frame-parameter nil 'fullscreen 'fullboth)

;; Disable the menu bar
(menu-bar-mode -1)

;; Disable the tool bar
(tool-bar-mode -1)

;; Disable the scroll bars
(scroll-bar-mode -1)

;;; Completion framework
(unless (package-installed-p 'vertico)
  (package-install 'vertico))

;; Enable completion by narrowing
(vertico-mode t)

;; Improve directory navigation
(with-eval-after-load 'vertico
  (define-key vertico-map (kbd "RET") #'vertico-directory-enter)
  (define-key vertico-map (kbd "DEL") #'vertico-directory-delete-word)
  (define-key vertico-map (kbd "M-d") #'vertico-directory-delete-char))

;;; Extended completion utilities
(unless (package-installed-p 'consult)
  (package-install 'consult))
(global-set-key [rebind switch-to-buffer] #'consult-buffer)
(global-set-key (kbd "C-c j") #'consult-line)
(global-set-key (kbd "C-c i") #'consult-imenu)

;; Enable line numbering in `prog-mode'
(add-hook 'prog-mode-hook #'display-line-numbers-mode)

;; Automatically pair parentheses
(electric-pair-mode t)

;;; Pop-up auto-completion
(unless (package-installed-p 'company)
  (package-install 'company))

;; Enable Company by default in programming buffers
(add-hook 'prog-mode-hook #'company-mode)

;;; Git client
(unless (package-installed-p 'magit)
  (package-install 'magit))

;; Bind the `magit-status' command to a convenient key.
(global-set-key (kbd "C-c g") #'magit-status)

;; Show word-granularity differences within diff hunks
(setq magit-diff-refine-hunk t)

;;; Indication of local VCS changes
(unless (package-installed-p 'diff-hl)
  (package-install 'diff-hl))

;; Enable `diff-hl' support by default in programming buffers
(add-hook 'prog-mode-hook #'diff-hl-mode)

;; Update the highlighting without saving
(diff-hl-flydiff-mode t)

;;; Markdown support
(unless (package-installed-p 'markdown-mode)
  (package-install 'markdown-mode))

;;; Outline-based notes management and organizer
(global-set-key (kbd "C-c l") #'org-store-link)
(global-set-key (kbd "C-c a") #'org-agenda)

;;; Additional Org-mode related functionality
(unless (package-installed-p 'org-contrib)
  (package-install 'org-contrib))

;;; Jump to arbitrary positions
(unless (package-installed-p 'avy)
  (package-install 'avy))
(global-set-key (kbd "C-c z") #'avy-goto-word-1)

;; Jump to any open window or frame
(setq avy-all-windows 'all-frames)

;; Miscellaneous options
(setq-default major-mode
              (lambda () ; guess major mode from file name
                (unless buffer-file-name
                  (let ((buffer-file-name (buffer-name)))
                    (set-auto-mode)))))
(setq confirm-kill-emacs #'y-or-n-p)
(setq window-resize-pixelwise t)
(setq frame-resize-pixelwise t)
(save-place-mode t)
(savehist-mode t)
(recentf-mode t)

;; Replace all yes/no with y/n.
(fset 'yes-or-no-p #'y-or-n-p)

;; Inhibit startup screen
(setq inhibit-splash-screen t)

;;; Emacs Pinentry
(unless (package-installed-p 'pinentry)
  (package-install 'pinentry))

(require 'pinentry)
(pinentry-start)

;; Setup mu4e
(require 'mu4e)
(setq
 ;; Mu4e folders
 ;; These folders are actually global. 
 mu4e-sent-folder "/Sent"
 mu4e-drafts-folder "/Drafts"
 mu4e-trash-folder "/Trash"
 mu4e-refile-folder "/Archive"

 ;; Tell mu4e how to update my mails.
 mu4e-get-mail-command "mbsync -a" ;; Via mbsync, and sync all accounts.
 mu4e-update-interval 600 ;; Update every 10 minutes.

 ;; Tell Emacs and mu4e what to do in sending my mail.
 message-send-mail-function 'sendmail-send-it ;; Via msmtp's sendmail.
 mu4e-sent-messages-behavior 'sent ;; Preserve my sent mail in `mu4e-sent-folder'.

 ;; Who am I ?
 user-mail-address "shadowrz@disroot.org"
 user-full-name "夜坂雅"

 ;; Misc.
 message-kill-buffer-on-exit t
 mu4e-split-view nil

 ;; Set mu4e as default mailer.
 mail-user-agent 'mu4e-user-agent
 read-mail-command 'mu4e)
;; Discourage HTML part.
(with-eval-after-load 'mm-decode
  (add-to-list 'mm-discouraged-alternatives "text/html"))

;; ERC configuration.
;; C-c e f: Open Libera.Chat
(global-set-key "\C-cef" (lambda () (interactive)
                           (erc-tls :server "irc.libera.chat" :port "7000"
                                    :nick "PhantomFutaba"
                                    :client-certificate t)))
(setq
 erc-rename-buffers t
 erc-interpret-mirc-color t
 erc-kill-buffer-on-part t
 erc-kill-queries-on-quit t
 erc-kill-server-buffer-on-quit t
 erc-user-full-name "夜坂雅")

;; Store automatic customisation options elsewhere
(setq custom-file (locate-user-emacs-file "custom.el"))
(when (file-exists-p custom-file)
  (load custom-file))
